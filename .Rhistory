# Canada
write.csv(CAN.CVD.df, paste(p.data.clean, "csv.CVD.CAN.clean.csv", sep = ""),
row.names = FALSE)
# USA
write.csv(USA.CVD.df, paste(p.data.clean, "csv.CVD.USA.clean.csv", sep = ""),
row.names = FALSE)
# Germany
write.csv(DE.CVD.df, paste(p.data.clean, "csv.CVD.DE.clean.csv", sep = ""),
row.names = FALSE)
# write csv files for each index with cleaned and formatted data
#SP500
write.csv(csv.SP500, paste(p.data.clean, "csv.SP500.clean.csv", sep = ""),
row.names = FALSE)
# NASDAQ
write.csv(csv.NASDAQ, paste(p.data.clean, "csv.NASDAQ.clean.csv", sep = ""),
row.names = FALSE)
#DJI
write.csv(csv.DJI, paste(p.data.clean, "csv.DJI.clean.csv", sep = ""),
row.names = FALSE)
# TSX
write.csv(csv.TSX, paste(p.data.clean, "csv.TSX.clean.csv", sep = ""),
row.names = FALSE)
# DAX
write.csv(csv.DAX, paste(p.data.clean, "csv.DAX.clean.csv", sep = ""),
row.names = FALSE)
### Here we gotta add a bunch of details about what our code does
### I am not the one to do this part well lol - severin
#location of work directory
wk.dir <- getwd()
#Folder list
folder.names <- c("a.data.raw","b.data.clean", "c.output","d.figures")
#Creating directories
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
#path names to variables
p.data.raw <- paste(wk.dir, "/", folder.names[1], "/", sep = "")
p.data.clean <- paste(wk.dir, "/", folder.names[2], "/", sep = "")
p.output <- paste(wk.dir, "/", folder.names[3], "/", sep = "")
p.fig <- paste(wk.dir, "/", folder.names[4], "/", sep = "")
# read csv files for stock exchange indices
# read files from data.raw folder
# csv files must be in data.raw folder for code to work!
csv.SP500 <- read.csv(paste(p.data.raw, "SP500.5Years.csv", sep = ""))
csv.NASDAQ <- read.csv(paste(p.data.raw, "NASDAQ.5Years.csv", sep = ""))
csv.DJI <- read.csv(paste(p.data.raw, "DowJones.5Years.csv",sep = ""))
csv.TSX <- read.csv(paste(p.data.raw,
"tsx_composite_index_canada.csv", sep = ""))
csv.DAX <- read.csv(paste(p.data.raw, "DAX.5Years.csv", sep = ""))
# dataframe check for each csv file
head(csv.SP500)
str(csv.SP500)
head (csv.NASDAQ)
str(csv.NASDAQ)
head(csv.DJI)
str(csv.DJI)
head(csv.TSX)
str(csv.TSX)
head(csv.DAX)
str(csv.DAX)
# read csv files for covid19 data
# reading from data.raw folder
csv.CVD.CAN <- read.csv(paste(p.data.raw,
"covid19canada-download.csv", sep = ""))
csv.CVD.USA <- read.csv(paste(p.data.raw,
"CoronaUSDec12.csv", sep = ""))
csv.CVD.DE <- read.csv(paste(p.data.raw,
"cases-rki-by-state_germany.csv", sep = ""))
# dataframe check for each csv file
head (csv.CVD.CAN)
str(csv.CVD.CAN)
head (csv.CVD.USA)
str(csv.CVD.USA)
head(csv.CVD.DE)
str(csv.CVD.DE)
# create function to alter format of dates
## I need to fix the function such that it runs format 1 and then if it gets
## a NA it then runs format 2, we need this for the DJI index
alter.date.fmt <- function(date){
dates.cr.fmt.1 <- as.Date.character(date, format = "%m/%d/%Y")
return(dates.cr.fmt.1)
}
# function for second date format
alter.date.fmt.2 <- function(date){
dates.cr.fmt.2 <- as.Date.character(date, format = "%b %d,%Y")
return(dates.cr.fmt.2)
}
# remove comma from DJI and DAX values
csv.DJI$Price <- as.numeric(gsub(",","",csv.DJI$Price))
csv.DJI$Low <- as.numeric(gsub(",","",csv.DJI$Low))
csv.DJI$High <- as.numeric(gsub(",","",csv.DJI$High))
csv.DJI$Open <- as.numeric(gsub(",","",csv.DJI$Open))
csv.DAX$Price <- as.numeric(gsub(",","",csv.DAX$Price))
csv.DAX$Low <- as.numeric(gsub(",","",csv.DAX$Low))
csv.DAX$High <- as.numeric(gsub(",","",csv.DAX$High))
csv.DAX$Open <- as.numeric(gsub(",","",csv.DAX$Open))
# sorting covid data from Canada by whole country
CAN.CVD.data <- csv.CVD.CAN[csv.CVD.CAN$prname == "Canada",]
# create data frame from Canada covid daily cases and dates
CAN.CVD.df <- cbind.data.frame(CAN.CVD.data$date, CAN.CVD.data$numtoday)
# replace / in submitted dates with - for correct reading of calendar values
USA.covid.cr.dates <- alter.date.fmt(csv.CVD.USA$submission_date)
csv.CVD.USA$submission_date <- USA.covid.cr.dates
# create dataframe with daily covid cases for all states in USA
csv.CVD.USA$new_case <- as.numeric(gsub(",","",csv.CVD.USA$new_case))
USA.CVD.df <- aggregate(csv.CVD.USA['new_case'],
by=csv.CVD.USA['submission_date'], sum)
# remove time from dates in Germany covid data
DE.covid.cr.dates <- gsub(csv.CVD.DE$time_iso8601,pattern="T17:00:00+0000",
replacement="",fixed=T)
csv.CVD.DE$time_iso8601 <- DE.covid.cr.dates
# create vector for daily cases
# by finding difference between total cases day (n) - (n-1)
DE.daily.cases <- ave(csv.CVD.DE$sum_cases, FUN = function(x) c(0,diff(x)))
# replace first value in vector with original total case value from csv file
DE.daily.cases <- replace(DE.daily.cases, DE.daily.cases==0,
csv.CVD.DE$sum_cases[1])
# create dataframe with daily covid cases from all states in Germany
DE.CVD.df <- cbind.data.frame(csv.CVD.DE$time_iso8601,DE.daily.cases)
# replace / in submitted dates with - for correct reading of calendar values
# SP500
SP500.cr.fmt.date <- alter.date.fmt(csv.SP500$Date)
csv.SP500$Date <- SP500.cr.fmt.date
# DJI
DJI.cr.fmt.date <- alter.date.fmt.2(csv.DJI$Date)
csv.DJI$Date <- DJI.cr.fmt.date
# DAX
DAX.cr.fmt.date <- alter.date.fmt.2(csv.DAX$Date)
csv.DAX$Date <- DAX.cr.fmt.date
# write csv files for each countries with cleaned and formatted data
# Canada
write.csv(CAN.CVD.df, paste(p.data.clean, "csv.CVD.CAN.clean.csv", sep = ""),
row.names = FALSE)
# USA
write.csv(USA.CVD.df, paste(p.data.clean, "csv.CVD.USA.clean.csv", sep = ""),
row.names = FALSE)
# Germany
write.csv(DE.CVD.df, paste(p.data.clean, "csv.CVD.DE.clean.csv", sep = ""),
row.names = FALSE)
# write csv files for each index with cleaned and formatted data
#SP500
write.csv(csv.SP500, paste(p.data.clean, "csv.SP500.clean.csv", sep = ""),
row.names = FALSE)
# NASDAQ
write.csv(csv.NASDAQ, paste(p.data.clean, "csv.NASDAQ.clean.csv", sep = ""),
row.names = FALSE)
#DJI
write.csv(csv.DJI, paste(p.data.clean, "csv.DJI.clean.csv", sep = ""),
row.names = FALSE)
# TSX
write.csv(csv.TSX, paste(p.data.clean, "csv.TSX.clean.csv", sep = ""),
row.names = FALSE)
# DAX
write.csv(csv.DAX, paste(p.data.clean, "csv.DAX.clean.csv", sep = ""),
row.names = FALSE)
### ADD STUFF ABOUT THIS CODE ###
# read cleaned csv files
csv.SP500 <- read.csv(paste(p.data.clean, "csv.SP500.clean.csv", sep = ""))
csv.NASDAQ <- read.csv(paste(p.data.clean, "csv.NASDAQ.clean.csv", sep = ""))
csv.DJI <- read.csv(paste(p.data.clean, "csv.DJI.clean.csv",sep = ""))
csv.TSX <- read.csv(paste(p.data.clean,"csv.TSX.clean.csv", sep = ""))
csv.DAX <- read.csv(paste(p.data.clean, "csv.DAX.clean.csv", sep = ""))
csv.CVD.CAN <- read.csv(paste(p.data.clean,
"csv.CVD.CAN.clean.csv", sep = ""))
csv.CVD.USA <- read.csv(paste(p.data.clean,
"csv.CVD.USA.clean.csv", sep = ""))
csv.CVD.DE <- read.csv(paste(p.data.clean,
"csv.CVD.DE.clean.csv", sep = ""))
# create daily covid cases by country dataframes and change column names
# Canada
CAN.CVD.df <- cbind.data.frame(csv.CVD.CAN$CAN.CVD.data.date,
csv.CVD.CAN$CAN.CVD.data.numtoday)
colnames(CAN.CVD.df) <- c("Date", "Daily cases")
# USA
USA.CVD.df <- cbind.data.frame(csv.CVD.USA$submission_date,
csv.CVD.USA$new_case)
colnames(USA.CVD.df) <- c("Date", "Daily cases")
# Germany
DE.CVD.df <- cbind.data.frame(csv.CVD.DE$csv.CVD.DE.time_iso8601,
csv.CVD.DE$DE.daily.cases)
colnames(DE.CVD.df) <- c("Date", "Daily cases")
# create function to find start and stop dates for data
find.dates <- function(date) {
max.date <- max(date)
min.date <- min(date)
min.max <- c(min.date, max.date)
return(min.max)
}
# Finding start and stop dates for covid data
# Canada
CAN.CVD.dates.min.max <- find.dates(csv.CVD.CAN$CAN.CVD.data.date)
# USA
USA.CVD.dates.min.max <- find.dates(csv.CVD.USA$submission_date)
# Germany
DE.CVD.dates.min.max <- find.dates(csv.CVD.DE$csv.CVD.DE.time_iso8601)
# create function to create vectors from dataframe sorted by column
fmt.by.date <- function(x,y,min.val,max.val){
df.vector.values <- c(x[y >= min.val & y <= max.val])
return(df.vector.values)
}
# create vectors for dates from each index by USA covid dates
# SP500
SP500.dates <- fmt.by.date(csv.SP500$Date, csv.SP500$Date,
USA.CVD.dates.min.max[1], USA.CVD.dates.min.max[2])
# NASDAQ
NASDAQ.dates <- fmt.by.date(csv.NASDAQ$Date, csv.NASDAQ$Date,
USA.CVD.dates.min.max[1], USA.CVD.dates.min.max[2])
# DJI
DJI.dates <- fmt.by.date(csv.DJI$Date, csv.DJI$Date,
USA.CVD.dates.min.max[1], USA.CVD.dates.min.max[2])
# create vectors for dates from each index by Canada covid dates
# TSX
TSX.dates <- fmt.by.date(csv.TSX$Date, csv.TSX$Date,
CAN.CVD.dates.min.max[1], CAN.CVD.dates.min.max[2])
# create vectors for dates from each index by German covid dates
# DAX
DAX.dates <- fmt.by.date(csv.DAX$Date, csv.DAX$Date,
DE.CVD.dates.min.max[1], DE.CVD.dates.min.max[2])
###### NEED TO WRITE ABOUT NEXT PART OF CODE, PERCENTAGE DIFFERENCE#########
# function to calculate percent difference between two values
percent.dif <- function(x,y){
top <- x-y
bottom <- (x+y)/2
final <- (top/bottom)*100
return(final)
}
# Create data frames to run correlation between
# daily covid cases and percent difference between index stock price high and low
# create vectors for daily percent differences in stock price
# for each index by USA covid dates
# SP500
SP500.diff <- abs(percent.dif((fmt.by.date(csv.SP500$Low, csv.SP500$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])),
(fmt.by.date(csv.SP500$High, csv.SP500$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2]))))
# NASDAQ
NASDAQ.diff <- abs(percent.dif((fmt.by.date(csv.NASDAQ$Low, csv.NASDAQ$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])),
(fmt.by.date(csv.NASDAQ$High, csv.NASDAQ$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2]))))
# DJI
DJI.diff <- abs(percent.dif((fmt.by.date(csv.DJI$Low, csv.DJI$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])),
(fmt.by.date(csv.DJI$High, csv.DJI$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2]))))
# create vectors for daily percent differences in stock price
# TSX
TSX.diff <- abs(percent.dif((fmt.by.date(csv.TSX$Low, csv.TSX$Date,
CAN.CVD.dates.min.max[1],
CAN.CVD.dates.min.max[2])),
(fmt.by.date(csv.TSX$High, csv.TSX$Date,
CAN.CVD.dates.min.max[1],
CAN.CVD.dates.min.max[2]))))
# create vectors for daily percent differences in stock price
# DAX
DAX.diff <- abs(percent.dif((fmt.by.date(csv.DAX$Low, csv.DAX$Date,
DE.CVD.dates.min.max[1],
DE.CVD.dates.min.max[2])),
(fmt.by.date(csv.DAX$High, csv.DAX$Date,
DE.CVD.dates.min.max[1],
DE.CVD.dates.min.max[2]))))
# create data frame for daily percent differences in stock price from each index
# by associated dates sorted by covid data
# SP500
SP500.df.diff <- cbind.data.frame(SP500.dates, SP500.diff)
# NASDAQ
NASDAQ.df.diff <- cbind.data.frame(NASDAQ.dates, NASDAQ.diff)
# DJI
DJI.df.diff <- cbind.data.frame(DJI.dates, DJI.diff)
# TSX
TSX.df.diff <- cbind.data.frame(TSX.dates, TSX.diff)
# DAX
DAX.df.diff <- cbind.data.frame(DAX.dates, DAX.diff)
# rename column names for index data frame dates to "Date"
names(SP500.df.diff)[names(SP500.df.diff) == "SP500.dates"] <- "Date"
names(NASDAQ.df.diff)[names(NASDAQ.df.diff) == "NASDAQ.dates"] <- "Date"
names(DJI.df.diff)[names(DJI.df.diff) == "DJI.dates"] <- "Date"
names(TSX.df.diff)[names(TSX.df.diff) == "TSX.dates"] <- "Date"
names(DAX.df.diff)[names(DAX.df.diff) == "DAX.dates"] <- "Date"
# rename column names for index data frames to "Percentage Difference"
names(SP500.df.diff)[names(SP500.df.diff) == "SP500.diff"] <- "Percentage Difference"
names(NASDAQ.df.diff)[names(NASDAQ.df.diff) == "NASDAQ.diff"] <- "Percentage Difference"
names(DJI.df.diff)[names(DJI.df.diff) == "DJI.diff"] <- "Percentage Difference"
names(TSX.df.diff)[names(TSX.df.diff) == "TSX.diff"] <- "Percentage Difference"
names(DAX.df.diff)[names(DAX.df.diff) == "DAX.diff"] <- "Percentage Difference"
# cast values in Date columns as Dates
# countries
CAN.CVD.df$Date <- as.Date(CAN.CVD.df$Date)
USA.CVD.df$Date <- as.Date(USA.CVD.df$Date)
DE.CVD.df$Date <- as.Date(DE.CVD.df$Date)
# indices
SP500.df.diff$Date <- as.Date(SP500.df.diff$Date)
NASDAQ.df.diff$Date <- as.Date(NASDAQ.df.diff$Date)
DJI.df.diff$Date <- as.Date(DJI.df.diff$Date)
TSX.df.diff$Date <- as.Date(TSX.df.diff$Date)
DAX.df.diff$Date <- as.Date(DAX.df.diff$Date)
# inner join merge of data frames for each country
# such that equal dates with values match
# USA
USA.SP500.diff.merged <- merge(x= USA.CVD.df, y=SP500.df.diff, by = 'Date')
USA.NASDAQ.diff.merged <- merge(x= USA.CVD.df, y=NASDAQ.df.diff, by = 'Date')
USA.DJI.diff.merged <- merge(x= USA.CVD.df, y=DJI.df.diff, by = 'Date')
# Canada
CAN.TSX.diff.merged <- merge(x= CAN.CVD.df, y=TSX.df.diff, by = 'Date')
# Germany
DE.DAX.diff.merged <- merge(x= DE.CVD.df, y=DAX.df.diff, by = 'Date')
# test correlation
# USA
cor(USA.SP500.diff.merged$`Percentage Difference`, USA.SP500.diff.merged$`Daily cases`)
cor(USA.NASDAQ.diff.merged$`Percentage Difference`, USA.NASDAQ.diff.merged$`Daily cases`)
cor(USA.DJI.diff.merged$`Percentage Difference`, USA.NASDAQ.diff.merged$`Daily cases`)
# Canada
cor(CAN.TSX.diff.merged$`Percentage Difference`, CAN.TSX.diff.merged$`Daily cases`)
# Germany
cor(DE.DAX.diff.merged$`Percentage Difference`, DE.DAX.diff.merged$`Daily cases`)
# write csv files for each country covid data merged with
# country index data for percentage difference in stock daily high and low
#SP500 & USA
write.csv(USA.SP500.diff.merged, paste(p.output,
"USA.SP500.diff.merged.csv",
sep = ""), row.names = FALSE)
# NASDAQ & USA
write.csv(USA.NASDAQ.diff.merged, paste(p.output,
"USA.NASDAQ.diff.merged.csv",
sep = ""), row.names = FALSE)
#DJI & USA
write.csv(USA.DJI.diff.merged, paste(p.output,
"USA.DJI.diff.merged.csv",
sep = ""), row.names = FALSE)
# TSX & Canada
write.csv(CAN.TSX.diff.merged, paste(p.output,
"CAN.TSX.diff.merged.csv",
sep = ""), row.names = FALSE)
# DAX & Germany
write.csv(DE.DAX.diff.merged, paste(p.output,
"DE.DAX.diff.merged.csv",
sep = ""), row.names = FALSE)
########### NEW SECTION ABOUT PERCENT CHANGE NEED TO WRITE SOMETHING#########
# function to calculate percent change for daily stock price between
# opening value and closing value
percent.change <- function(open,close){
top.c <- close - open
bottom.c <- open
final.c <- (top.c / bottom.c)*100
return(final.c)
}
# Create data frames to run correlation between
# daily covid cases and percent change between index stock price open and close
# create vectors for daily percent change in stock price
# for each index by USA covid dates
# SP500
SP500.change <- percent.change((fmt.by.date(csv.SP500$Open, csv.SP500$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])),
(fmt.by.date(csv.SP500$Close.Last, csv.SP500$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])))
# NASDAQ
NASDAQ.change <- percent.change((fmt.by.date(csv.NASDAQ$Open, csv.NASDAQ$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])),
(fmt.by.date(csv.NASDAQ$Close, csv.NASDAQ$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])))
# DJI
DJI.change <- percent.change((fmt.by.date(csv.DJI$Open, csv.DJI$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])),
(fmt.by.date(csv.DJI$Price, csv.DJI$Date,
USA.CVD.dates.min.max[1],
USA.CVD.dates.min.max[2])))
# create vectors for daily percent change in stock price
# TSX
TSX.change <- percent.change((fmt.by.date(csv.TSX$Open, csv.TSX$Date,
CAN.CVD.dates.min.max[1],
CAN.CVD.dates.min.max[2])),
(fmt.by.date(csv.TSX$Close, csv.TSX$Date,
CAN.CVD.dates.min.max[1],
CAN.CVD.dates.min.max[2])))
# create vectors for daily percent change in stock price
# DAX
DAX.change <- percent.change((fmt.by.date(csv.DAX$Open, csv.DAX$Date,
DE.CVD.dates.min.max[1],
DE.CVD.dates.min.max[2])),
(fmt.by.date(csv.DAX$Price, csv.DAX$Date,
DE.CVD.dates.min.max[1],
DE.CVD.dates.min.max[2])))
# create data frame for daily percent change in stock price from each index
# by associated dates sorted by covid data
# SP500
SP500.df.change <- cbind.data.frame(SP500.dates, SP500.change)
# NASDAQ
NASDAQ.df.change <- cbind.data.frame(NASDAQ.dates, NASDAQ.change)
# DJI
DJI.df.change <- cbind.data.frame(DJI.dates, DJI.change)
# TSX
TSX.df.change <- cbind.data.frame(TSX.dates, TSX.change)
# DAX
DAX.df.change <- cbind.data.frame(DAX.dates, DAX.change)
# rename column names for index data frame dates to "Date"
names(SP500.df.change)[names(SP500.df.change) == "SP500.dates"] <- "Date"
names(NASDAQ.df.change)[names(NASDAQ.df.change) == "NASDAQ.dates"] <- "Date"
names(DJI.df.change)[names(DJI.df.change) == "DJI.dates"] <- "Date"
names(TSX.df.change)[names(TSX.df.change) == "TSX.dates"] <- "Date"
names(DAX.df.change)[names(DAX.df.change) == "DAX.dates"] <- "Date"
# rename column names for index data frames to "Change in price"
names(SP500.df.change)[names(SP500.df.change) == "SP500.change"] <- "Change in price"
names(NASDAQ.df.change)[names(NASDAQ.df.change) == "NASDAQ.change"] <- "Change in price"
names(DJI.df.change)[names(DJI.df.change) == "DJI.change"] <- "Change in price"
names(TSX.df.change)[names(TSX.df.change) == "TSX.change"] <- "Change in price"
names(DAX.df.change)[names(DAX.df.change) == "DAX.change"] <- "Change in price"
# cast values in Date columns as Dates
# countries
CAN.CVD.df$Date <- as.Date(CAN.CVD.df$Date)
USA.CVD.df$Date <- as.Date(USA.CVD.df$Date)
DE.CVD.df$Date <- as.Date(DE.CVD.df$Date)
# indices
SP500.df.change$Date <- as.Date(SP500.df.change$Date)
NASDAQ.df.change$Date <- as.Date(NASDAQ.df.change$Date)
DJI.df.change$Date <- as.Date(DJI.df.change$Date)
TSX.df.change$Date <- as.Date(TSX.df.change$Date)
DAX.df.change$Date <- as.Date(DAX.df.change$Date)
# inner join merge of data frames for each country
# such that equal dates with values match
# USA
USA.SP500.change.merged <- merge(x= USA.CVD.df, y=SP500.df.change, by = 'Date')
USA.NASDAQ.change.merged <- merge(x= USA.CVD.df, y=NASDAQ.df.change, by = 'Date')
USA.DJI.change.merged <- merge(x= USA.CVD.df, y=DJI.df.change, by = 'Date')
# Canada
CAN.TSX.change.merged <- merge(x= CAN.CVD.df, y=TSX.df.change, by = 'Date')
# Germany
DE.DAX.change.merged <- merge(x= DE.CVD.df, y=DAX.df.change, by = 'Date')
# test correlation
# USA
cor(USA.SP500.change.merged$`Change in price`, USA.SP500.diff.merged$`Daily cases`)
cor(USA.NASDAQ.change.merged$`Change in price`, USA.NASDAQ.diff.merged$`Daily cases`)
cor(USA.DJI.change.merged$`Change in price`, USA.NASDAQ.diff.merged$`Daily cases`)
# Canada
cor(CAN.TSX.change.merged$`Change in price`, CAN.TSX.diff.merged$`Daily cases`)
# Germany
cor(DE.DAX.change.merged$`Change in price`, DE.DAX.diff.merged$`Daily cases`)
# write csv files for each country covid data merged with
# country index data for percentage change in stock price at opening and closing
#SP500 & USA
write.csv(USA.SP500.change.merged, paste(p.output,
"USA.SP500.change.merged.csv",
sep = ""), row.names = FALSE)
# NASDAQ & USA
write.csv(USA.NASDAQ.change.merged, paste(p.output,
"USA.NASDAQ.change.merged.csv",
sep = ""), row.names = FALSE)
#DJI & USA
write.csv(USA.DJI.change.merged, paste(p.output,
"USA.DJI.change.merged.csv",
sep = ""), row.names = FALSE)
# TSX & Canada
write.csv(CAN.TSX.change.merged, paste(p.output,
"CAN.TSX.change.merged.csv",
sep = ""), row.names = FALSE)
# DAX & Germany
write.csv(DE.DAX.change.merged, paste(p.output,
"DE.DAX.change.merged.csv",
sep = ""), row.names = FALSE)
USA.SP500.diff.merged <- read.csv(paste(p.output, "USA.SP500.diff.merged.csv", sep = ""))
USA.NASDAQ.diff.merged <- read.csv(paste(p.output, "USA.NASDAQ.diff.merged.csv", sep = ""))
USA.DJI.diff.merged <- read.csv(paste(p.output, "USA.DJI.diff.merged.csv",sep = ""))
CAN.TSX.diff.merged <- read.csv(paste(p.output,"CAN.TSX.diff.merged.csv", sep = ""))
DE.DAX.diff.merged <- read.csv(paste(p.output, "DE.DAX.diff.merged.csv", sep = ""))
# percent change csv files
USA.SP500.change.merged <- read.csv(paste(p.output, "USA.SP500.change.merged.csv", sep = ""))
USA.NASDAQ.change.merged <- read.csv(paste(p.output, "USA.NASDAQ.change.merged.csv", sep = ""))
USA.DJI.change.merged <- read.csv(paste(p.output, "USA.DJI.change.merged.csv",sep = ""))
CAN.TSX.change.merged <- read.csv(paste(p.output,"CAN.TSX.change.merged.csv", sep = ""))
DE.DAX.change.merged <- read.csv(paste(p.output, "DE.DAX.change.merged.csv", sep = ""))
### Here we gotta add a bunch of details about what our code does
### I am not the one to do this part well lol - severin
#location of work directory
wk.dir <- getwd()
#Folder list
folder.names <- c("a.data.raw","b.data.clean", "c.output","d.figures")
#Creating directories
for(i in 1:length(folder.names)){
if(file.exists(folder.names[i]) == FALSE){
dir.create(folder.names[i])
}
}
#path names to variables
p.data.raw <- paste(wk.dir, "/", folder.names[1], "/", sep = "")
p.data.clean <- paste(wk.dir, "/", folder.names[2], "/", sep = "")
p.output <- paste(wk.dir, "/", folder.names[3], "/", sep = "")
p.fig <- paste(wk.dir, "/", folder.names[4], "/", sep = "")
USA.SP500.diff.merged <- read.csv(paste(p.output, "USA.SP500.diff.merged.csv", sep = ""))
USA.NASDAQ.diff.merged <- read.csv(paste(p.output, "USA.NASDAQ.diff.merged.csv", sep = ""))
USA.DJI.diff.merged <- read.csv(paste(p.output, "USA.DJI.diff.merged.csv",sep = ""))
CAN.TSX.diff.merged <- read.csv(paste(p.output,"CAN.TSX.diff.merged.csv", sep = ""))
DE.DAX.diff.merged <- read.csv(paste(p.output, "DE.DAX.diff.merged.csv", sep = ""))
# percent change csv files
USA.SP500.change.merged <- read.csv(paste(p.output, "USA.SP500.change.merged.csv", sep = ""))
USA.NASDAQ.change.merged <- read.csv(paste(p.output, "USA.NASDAQ.change.merged.csv", sep = ""))
USA.DJI.change.merged <- read.csv(paste(p.output, "USA.DJI.change.merged.csv",sep = ""))
CAN.TSX.change.merged <- read.csv(paste(p.output,"CAN.TSX.change.merged.csv", sep = ""))
DE.DAX.change.merged <- read.csv(paste(p.output, "DE.DAX.change.merged.csv", sep = ""))
head(USA.DJI.change.merged)
head(USA.DJI.diff.merged)
